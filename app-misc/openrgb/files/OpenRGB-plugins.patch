diff --git a/PluginManager.cpp b/PluginManager.cpp
index 6ccad72c..fe1761b4 100644
--- a/PluginManager.cpp
+++ b/PluginManager.cpp
@@ -41,29 +41,30 @@ void PluginManager::ScanAndLoadPlugins()
     | The plugins directory is a directory named "plugins" in   |
     | the configuration directory                               |
     \*---------------------------------------------------------*/
-    const QDir plugins_dir = QString(ResourceManager::get()->GetConfigurationDirectory().c_str()).append(plugins_path);
-    LOG_INFO("[PluginManager] Scanning plugin directory: %s", plugins_dir.absolutePath().toStdString().c_str());
-
-    /*---------------------------------------------------------*\
-    | Get a list of all files in the plugins directory          |
-    \*---------------------------------------------------------*/
-    std::vector<std::string> FileList;
-
-    for(int i = 0; i < QDir(plugins_dir).entryList(QDir::Files).size(); i++)
-    {
-        LOG_TRACE("[PluginManager] Found plugin file %s", QDir(plugins_dir).entryList(QDir::Files)[i].toStdString().c_str());
-        FileList.push_back(QDir(plugins_dir).entryList(QDir::Files)[i].toStdString());
-    }
-
-    /*---------------------------------------------------------*\
-    | Attempt to load each file in the plugins directory        |
-    \*---------------------------------------------------------*/
-    for(const std::string &plugin_name : FileList)
-    {
-        const std::string plugin_path = plugins_dir.absoluteFilePath(QString().fromStdString(plugin_name)).toStdString();
-
-        AddPlugin(plugin_path);
-    }
+	for(const QDir plugins_dir : {QString(ResourceManager::get()->GetConfigurationDirectory().c_str()).append(plugins_path),
+			QString().fromStdString(GENTOO_PLUGINS_DIR)}) {
+		LOG_INFO("[PluginManager] Scanning plugin directory: %s", plugins_dir.absolutePath().toStdString().c_str());
+		/*---------------------------------------------------------*\
+		| Get a list of all files in the plugins directory          |
+		\*---------------------------------------------------------*/
+		std::vector<std::string> FileList;
+
+		for(int i = 0; i < QDir(plugins_dir).entryList(QDir::Files).size(); i++)
+		{
+			LOG_TRACE("[PluginManager] Found plugin file %s", QDir(plugins_dir).entryList(QDir::Files)[i].toStdString().c_str());
+			FileList.push_back(QDir(plugins_dir).entryList(QDir::Files)[i].toStdString());
+		}
+		
+		/*---------------------------------------------------------*\
+		  | Attempt to load each file in the plugins directory        |
+		  \*---------------------------------------------------------*/
+		for(const std::string &plugin_name : FileList)
+		{
+			const std::string plugin_path = plugins_dir.absoluteFilePath(QString().fromStdString(plugin_name)).toStdString();
+
+			AddPlugin(plugin_path);
+		}
+	}
 }
 
 void PluginManager::AddPlugin(std::string path)
